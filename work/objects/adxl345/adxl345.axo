<objdefs appVersion="1.0.12">
   <obj.normal id="adxl345" uuid="1b1176c3-3dbd-4bf2-b813-6e486363be56">
      <sDescription>ADXL345 Accelerometer Driver (I2C).

This object requires a single instance of the factory/gpio/i2c/config object.
This allows multiple devices (each with a unique i2c address) to work concurrently.
Tested with I2C1, SCL=PB8, SDA=PB9 (these are the config defaults)</sDescription>
      <author>Jason Harris</author>
      <license>BSD</license>
      <inlets/>
      <outlets>
         <int32 name="x"/>
         <int32 name="y"/>
         <int32 name="z"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <combo name="adr">
            <MenuEntries>
               <string>0x1d</string>
               <string>0x53</string>
            </MenuEntries>
            <CEntries>
               <string>0x1d</string>
               <string>0x53</string>
            </CEntries>
         </combo>
      </attribs>
      <includes>
         <include>./adxl345.h</include>
      </includes>
      <depends>
         <depend>I2CD1</depend>
      </depends>
      <code.declaration><![CDATA[const struct adxl345_cfg config[21] = {
  {ADXL345_TAP_THRESH, 0},
  {ADXL345_OFSX, 0},
  {ADXL345_OFSY, 0},
  {ADXL345_OFSZ, 0},
  {ADXL345_TAP_DUR, 0},
  {ADXL345_TAP_LATENT, 0},
  {ADXL345_TAP_WINDOW, 0},
  {ADXL345_THRESH_ACT, 0},
  {ADXL345_THRESH_INACT, 0},
  {ADXL345_TIME_INACT, 0},
  {ADXL345_ACT_INACT_CTL, 0},
  {ADXL345_THRESH_FF, 0},
  {ADXL345_TIME_FF, 0},
  {ADXL345_TAP_AXES, 0},
  {ADXL345_BW_RATE, BW_RATE_50},
  {ADXL345_POWER_CTL, (1 << 3 /*measure*/ )},
  {ADXL345_INT_ENABLE, 0},
  {ADXL345_INT_MAP, 0},
  {ADXL345_DATA_FORMAT, (1 << 3 /*full_res*/) | (3 << 0 /*16g*/) },
  {ADXL345_FIFO_CTL, (2 << 6 /*stream*/ )},
  {0xff, 0} // end-of-list
};

struct adxl345_state state;]]></code.declaration>
      <code.init><![CDATA[adxl345_init(&state, &config[0], attr_adr);]]></code.init>
      <code.dispose><![CDATA[adxl345_dispose(&state);]]></code.dispose>
      <code.krate><![CDATA[adxl345_krate(&state, &outlet_x, &outlet_y, &outlet_z);]]></code.krate>
   </obj.normal>
</objdefs>
