<objdefs appVersion="1.0.12">
   <obj.normal id="hmc5883l" uuid="558dfbc0-184c-46bf-93dc-588a45d75218">
      <sDescription>HMC5883L Digital Compass Driver (I2C).

This object requires a single instance of the factory/gpio/i2c/config object.
This allows multiple devices (each with a unique i2c address) to work concurrently.
Tested with I2C1, SCL=PB8, SDA=PB9 (these are the config defaults)</sDescription>
      <author>Jason Harris</author>
      <license>BSD</license>
      <inlets/>
      <outlets>
         <int32 name="x"/>
         <int32 name="y"/>
         <int32 name="z"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <includes>
         <include>./hmc5883l.h</include>
      </includes>
      <depends>
         <depend>I2CD1</depend>
      </depends>
      <code.declaration><![CDATA[const struct hmc5883l_cfg config[4] = {
  {HMC5883L_CFG_REG_A, COMPASS_RATE_15 << 2 /*Hz */},
  {HMC5883L_CFG_REG_B, 1 << 5 /*gain */},
  {HMC5883L_MODE_REG, 0 << 0 /*continuous mode */},
  {0xff, 0} // end-of-list
};

struct hmc5883l_state state;]]></code.declaration>
      <code.init><![CDATA[hmc5883l_init(&state, &config[0]);]]></code.init>
      <code.dispose><![CDATA[hmc5883l_dispose(&state);]]></code.dispose>
      <code.krate><![CDATA[hmc5883l_krate(&state, &outlet_x, &outlet_y, &outlet_z);]]></code.krate>
   </obj.normal>
</objdefs>